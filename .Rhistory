solved_value="Arrest made?")
#fixing dates
library(lubridate)
ytownmurders$date <- mdy(ytownmurders$date)
ytownmurders$year <- year(ytownmurders$date)
ytownmurders$month <- month(ytownmurders$date, label=T)
#reordering columns and removing 2000 homicides
ytownmurders <- ytownmurders %>%
filter(year>=2001) %>%
select(year, month, date, hour, address, v_gender,
v_race, v_age, solved_value) %>%
mutate(v_race=case_when(
v_race=="W" ~ "White",
v_race=="B" ~ "Black",
v_race=="H" ~ "Hispanic")) %>%
mutate(v_gender=case_when(
v_gender=="M" ~ "Male",
v_gender=="F" ~ "Female")) %>%
mutate(solved_label=case_when(
solved_value=="N" ~ "Unsolved",
solved_value=="Y" ~ "Solved"))
View(ytownmurders)
library(tidyverse)
#importing raw data
ytownmurders <- read_csv("raw_data/2000-2017 homicides.csv")
#renaming columns
ytownmurders <- select(ytownmurders, hour=HOUR, date=INC_DATE, address=INC_ADDRESS,
v_gender=V_GENDER, v_race=V_RACE, v_age=V_AGE,
solved_value="Arrest made?")
#fixing dates
library(lubridate)
ytownmurders$date <- mdy(ytownmurders$date)
ytownmurders$year <- year(ytownmurders$date)
ytownmurders$month <- month(ytownmurders$date, label=T)
#reordering columns and removing 2000 homicides
ytownmurders <- ytownmurders %>%
filter(year>=2001) %>%
select(year, month, date, hour, address, v_gender,
v_race, v_age, solved_value) %>%
mutate(v_race=case_when(
v_race=="W" ~ "White",
v_race=="B" ~ "Black",
v_race=="H" ~ "Hispanic")) %>%
mutate(v_gender=case_when(
v_gender=="M" ~ "Male",
v_gender=="F" ~ "Female")) %>%
mutate(solved_label=case_when(
solved_value=="N" ~ "Unsolved",
solved_value=="Y" ~ "Solved"))
ytownmurders %>%
group_by(year, solved_label) %>%
summarize(total=n()) %>%
mutate(percent=round(total/sum(total)*100, 2)) %>%
filter(solved_label=="Solved") %>%
datatable()
library(DT)
olve rates per year
ytownmurders %>%
group_by(year, solved_label) %>%
summarize(total=n()) %>%
mutate(percent=round(total/sum(total)*100, 2)) %>%
filter(solved_label=="Solved") %>%
datatable()
ytownmurders %>%
group_by(year) %>%
summarize(total=n()) %>%
datatable()
library(tidyverse)
#importing dataset
murders <- read_csv("output_data/2001-2017homicides.csv")
murders$date <- mdy(murders$date)
View(murders)
library(lubridate)
murders$date <- mdy(murders$date)
View(murders)
View(murders)
murders$address <- paste0(murders$address, ", Youngstown, OH")
library(ggmap)
youngstownloc <- geocode("Youngstown, OH")
#filtering out addresses of intersections, which ggmap can't handle
str_detect(murders$address, "&")
ggmurders <- murders %>%
filter(str_detect(murders$address, "&")==FALSE)
intmurders <- murders %>%
filter(str_detect(murders$address, "&")==TRUE)
write_csv <- (intmurders, "output_data/intersectionmurders.csv")
View(intmurders)
write_csv(intmurders, "output_data/intersectionmurders.csv")
#adding latitude and longitude data
ggmurders <- mutate_geocode(murders, address)
popupmurders <- paste0("<b>Date: </b>", as.character(murders$date), "</br>",
"<b>Location: </b>", as.character(murders$address), "</br>",
"<b>Victim Name: </b>", as.character(murders$name), "</br>",
"<b>Victim Age: </b>", as.character(murders$v_age), "</br>",
"<b>Victim gender: </b>", as.character(murders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(murders$v_race))
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
warnings()
View(murders)
View(ggmurders)
library(leaflet)
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
map <- leaflet(murders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions=markerClusterOptions(),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Location: </b>", as.character(ggmurders$address), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions=markerClusterOptions(),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
ggmurders <- case_when(ggmurders$lat=NA, mutate_geocode(ggmurders))
addggmurders <- ggmurders %>%
filter(ggmurders$lat=NA)
addggmurders <- ggmurders %>%
filter(ggmurders$lat==NA)
View(addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
View(addggmurders)
select(addggmurders, -lat, -lon)
select(addggmurders, -lat, -lon)
addggmurders = select(addggmurders, -lat, -lon)
mutate(murders, solved_label=case_when(
solved_value=="Unsolved" ~ "N",
solved_value=="Solved" ~ "Y"))
View(murders)
murders <- mutate(murders, solved_value=case_when(
solved_label=="Unsolved" ~ "N",
solved_label=="Solved" ~ "Y"))
View(murders)
write_csv(murders, "output_data/2001-2017homicides.csv")
View(addggmurders)
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders)
addggmurders <- mutate_geocode(addggmurders$address)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
View(addggmurders)
gggmurders <- cbind(ggmurders, addggmurders)
gggmurders <- rbind(ggmurders, addggmurders)
View(gggmurders)
ggmurders <- gggmurders
rm(ggmurders)
ggmurders <- gggmurders
rm(gggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
View(intmurders)
View(ggmurders)
ggmurders <- murders %>%
filter(str_detect(murders$address, "&")==FALSE)
View(ggmurders)
ggmurders <- mutate_geocode(ggmurders, address)
View(intmurders)
View(addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- rbind(ggmurders, addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- rbind(ggmurders, addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- rbind(ggmurders, addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- rbind(ggmurders, addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- rbind(ggmurders, addggmurders)
addggmurders <- ggmurders %>%
filter(is.na(ggmurders$lat))
ggmurders <- ggmurders %>%
filter(!is.na(ggmurders$lat))
addggmurders <- select(addggmurders, -lat, -lon)
addggmurders <- mutate_geocode(addggmurders, address)
ggmurders <- rbind(ggmurders, addggmurders)
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Location: </b>", as.character(ggmurders$address), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
library(leaflet)
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Location: </b>", as.character(ggmurders$address), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim Gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
write_csv(ggmurders, "output_data/locatedmurders.csv")
View(ggmurders)
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map <- leaflet(ggmurders) %>%
addTiles %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
View(youngstownloc)
youngstownloc <- geocode("Youngstown, OH")
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders,
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, markerOptions=markerClusterOptions(),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
View(ggmurders)
ggmurders <- read_csv("output_data/locatedmurders.csv")
library(tidyverse)
library(leaflet)
ggmurders <- read_csv("output_data/locatedmurders.csv")
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
#created information for popups
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Location: </b>", as.character(ggmurders$address), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim Gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
#map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
youngstownloc <- geocode("Youngstown, OH")
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
library(ggmap)
youngstownloc <- geocode("Youngstown, OH")
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
#importing dataset
murders <- read_csv("output_data/locatedmurders.csv")
library(tidyverse)
library(lubridate)
murders <- read_csv("output_data/locatedmurders.csv")
murders$date <- mdy(murders$date)
library(ggmap)
youngstownloc <- geocode("Youngstown, OH")
library(leaflet)
ggmurders <- read_csv("output_data/locatedmurders.csv")
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
#created information for popups
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Location: </b>", as.character(ggmurders$address), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim Gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
#map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
murders <- read_csv("output_data/locatedmurders.csv")
murders$date <- mdy(murders$date)
ggmurders <- read_csv("output_data/locatedmurders.csv")
ggmurders$date <- mdy(ggmurders$date)
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
murders <- read_csv("output_data/locatedmurders.csv")
murders$date <- mdy(murders$date)
library(tidyverse)
library(lubridate)
murders <- read_csv("output_data/locatedmurders.csv")
murders$date <- mdy(murders$date)
library(ggmap)
youngstownloc <- geocode("Youngstown, OH")
library(leaflet)
#I manually went through and added the lat and lon values for these observations because
#ggmap wouldn't properly return intersections
murders2 <- read_csv("output_data/intersectionmurders.csv")
murders <- rbind(murders, murders2)
murders <- cbind(murders, murders2)
murders <- rbind(murders, murders2)
murders <- rbind(murders, murders2)
ggmurders <- rbind(murders, murders2)
murders$date <- mdy(murders$date)
murders2$date <- mdy(murders2$date)
View(murders2)
View(murders)
murders <- read_csv("output_data/locatedmurders.csv")
murders$date <- mdy(murders$date)
ggmurders <- rbind(murders, murders2)
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
#created information for popups
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim Gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
#map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
murders2 <- read_csv("output_data/intersectionmurders.csv")
murders2$date <- mdy(murders2$date)
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
ggmurders <- rbind(murders, murders2)
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
murders <- read_csv("output_data/locatedmurders.csv")
murders$date <- mdy(murders$date)
murders2 <- read_csv("output_data/intersectionmurders.csv")
murders2$date <- mdy(murders2$date)
ggmurders <- mutate_geocode(ggmurders, address)
ggmurders <- rbind(murders, murders2)
#created a palette
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
#created information for popups
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim Gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
#map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
murders2 <- read_csv("output_data/intersectionmurders.csv")
murders2$date <- mdy(murders2$date)
ggmurders <- rbind(murders, murders2)
palette <- colorFactor(c("#13ED3F", "#DC143C"), domain=c("Solved", "Unsolved"))
#created information for popups
popupmurders <- paste0("<b>Date: </b>", as.character(ggmurders$date), "</br>",
"<b>Victim Name: </b>", as.character(ggmurders$v_name), "</br>",
"<b>Victim Age: </b>", as.character(ggmurders$v_age), "</br>",
"<b>Victim Gender: </b>", as.character(ggmurders$v_gender), "</br>",
"<b>Victim Race: </b>", as.character(ggmurders$v_race))
#map
map <- leaflet(ggmurders) %>%
addProviderTiles(providers$CartoDB.Positron) %>%
setView(youngstownloc$lon, youngstownloc$lat, zoom=12) %>%
addCircleMarkers(~lon, ~lat, weight=3, radius=4, color=~palette(solved_label),
popup=popupmurders, clusterOptions = markerClusterOptions(maxClusterRadius=1, spiderfyDistanceMultiplier=2),
stroke=F, fillOpacity=0.5) %>%
addLegend("bottomright", colors=c("#13ED3F", "#DC143C"), labels=c("Solved", "Unsolved"),
title="Youngstown Murders 2001-2017")
map
